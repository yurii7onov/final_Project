/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    // 1 hole
    (0 0 0) //0
    (2 0 0) //1
    (2 50 0) //2
    (0 50 0) //3

    (0 0 2) //4
    (2 0 2) //5
    (2 50 2) //6
    (0 50 2) //7

    // 2 hole
    (83.5 0 0) //8
    (85.5 0 0) //9
    (85.5 50 0) //10
    (83.3 50 0) //11

    (83.5 0 2) //12
    (85.5 0 2) //13
    (85.5 50 2) //14
    (83.5 50 2) //15

    // 3 hole
    (167 0 0) //16
    (169 0 0) //17
    (169 50 0) //18
    (167 50 0) //19

    (167 0 2) //20
    (169 0 2) //21
    (169 50 2) //22
    (167 50 2) //23

    // 4 hole
    (250.5 0 0) //24
    (252.5 0 0) //25
    (252.5 50 0) //26
    (250.5 50 0) //27

    (250.5 0 2) //28
    (252.5 0 2) //29
    (252.5 50 2) //30
    (250.5 50 2) //31

    // 5 hole
    (334 0 0) //32
    (336 0 0) //33
    (336 50 0) //34
    (334 50 0) //35

    (334 0 2) //36
    (336 0 2) //37
    (336 50 2) //38
    (334 50 2) //39

    //air before 1 hole
    (-81.5 0 0) //40
    (0 0 0) //41
    (0 50 0) //42
    (-81.5 50 0) //43

    (-81.5 0 2) //44
    (0 0 2) //45
    (0 50 2) //46
    (-81.5 50 2) //47

    //air between hole 1 and 2
    (2 0 0) //48
    (83.5 0 0) //49
    (83.5 50 0) //50
    (2 50 0) //51

    (2 0 2) //52
    (83.5 0 2) //53
    (83.5 50 2) //54
    (2 50 2) //55

    //air between hole 2 and 3
    (85.5 0 0) //56
    (167 0 0) //57
    (167 50 0) //58
    (85.5 50 0) //59

    (85.5 0 2) //60
    (167 0 2) //61
    (167 50 2) //62
    (85.5 50 2) //63

    //air between hole 3 and 4
    (169 0 0) //64
    (250.5 0 0) //65
    (250.5 50 0) //66
    (169 50 0) //67

    (169 0 2) //68
    (250.5 0 2) //69
    (250.5 50 2) //70
    (169 50 2) //71

    //air between hole 4 and 5
    (252.5 0 0) //72
    (334 0 0) //73
    (334 50 0) //74
    (252.5 50 0) //75

    (252.5 0 2) //76
    (334 0 2) //77
    (334 50 2) //78
    (252.5 50 2) //79

    //air between hole 5 and 6
    (336 0 0) //80
    (417.5 0 0) //81
    (417.5 50 0) //82
    (336 50 0) //83

    (336 0 2) //84
    (417.5 0 2) //85
    (417.5 50 2) //86
    (336 50 2) //87

);

blocks          
(
    hex (0 1 2 3 4 5 6 7)            (10 50 1) simpleGrading (1 1 1)   // hole 1
    hex (8 9 10 11 12 13 14 15)      (10 50 1) simpleGrading (1 1 1)   // hole 2
    hex (16 17 18 19 20 21 22 23)    (10 50 1) simpleGrading (1 1 1)   // hole 3
    hex (24 25 26 27 28 29 30 31)    (10 50 1) simpleGrading (1 1 1)   // hole 4
    hex (32 33 34 35 36 37 38 39)    (10 50 1) simpleGrading (1 1 1)   // hole 5

    hex (40 41 42 43 44 45 46 47)    (50 50 1) simpleGrading (1 1 1)   // air before 1 hole
    hex (48 49 50 51 52 53 54 55)    (50 50 1) simpleGrading (1 1 1)   // air between hole 1 and 2
    hex (56 57 58 59 60 61 62 63)    (50 50 1) simpleGrading (1 1 1)   // air between hole 2 and 3
    hex (64 65 66 67 68 69 70 71)    (50 50 1) simpleGrading (1 1 1)   // air between hole 3 and 4
    hex (72 73 74 75 76 77 78 79)    (50 50 1) simpleGrading (1 1 1)   // air between hole 4 and 5

    hex (80 81 82 83 84 85 86 87)    (50 50 1) simpleGrading (1 1 1)   // air between hole 5 and 6

);

edges           
(
);

boundary         
(

    fixedWalls
    {
        type    wall;
        faces
    (
        //air 10
        (42 43 47 46)
        (44 47 43 40)

        //air 12
        (50 51 55 54)

        //air 23
        (58 59 63 62)

        //air 34
        (66 67 71 70)

        //air 45
        (74 75 79 78)

        //air 50
        (82 83 87 86)
        (81 82 86 85)

    );
    }

        frontAndBack
    {
        type    empty;
        faces
    (
        // hole 1
        (0 3 2 1)
        (4 5 6 7)

        // air 10
        (44 45 46 47)
        (43 42 41 40)

        //hole 2
        (8 11 10 9)
        (15 12 13 14)

        //air 12
        (52 53 54 55)
        (48 51 50 49)

        //hole 3
        (20 21 22 23)
        (16 19 18 17)

        //air 23
        (60 61 62 63)
        (56 59 58 57)

        //hole 4
        (28 29 30 31)
        (27 26 25 24)

        //air 34
        (68 69 70 71)
        (64 67 66 65)

        //hole 5
        (36 37 38 39)
        (35 34 33 32)

        //air 45
        (76 77 78 79)
        (72 75 74 73)

        //air 50
        (84 85 86 87)
        (80 83 82 81)

    );
    }

    inlet_1
    {
        type patch;
        faces
    (
        (3 7 6 2)
    );
    }

    inlet_2
    {
        type patch;
        faces
    (
        (11 15 14 10)
    );
    }

    inlet_3
    {
        type patch;
        faces
    (
        (18 19 23 22)
    );
    }

    inlet_4
    {
        type patch;
        faces
    (
        (26 27 31 30)
    );
    }

    inlet_5
    {
        type patch;
        faces
    (
        (39 35 34 38)
    );
    }

    outlet
    {
        type patch;
        faces
    (
        //hole 1
        (1 5 4 0)
        //air 10
        (41 45 44 40)
        //hole 2
        (9 13 12 8)
        //air 12
        (53 52 48 49)
        // hole 3
        (21 20 16 17)
        //air 23
        (56 57 61 60)
        //hole 4
        (24 25 29 28)
        //air 34
        (68 64 65 69)
        //hole 5
        (32 33 37 36)
        //air 45
        (72 73 77 76)
        //air 50
        (80 81 85 84)
    );
    }
/*
    mid_layer_1
    {
        type    patch;
        faces
    (
        (45 41 42 46)

    );
    }

    mid_layer_2
    {
        type    patch;
        faces
    (
        (0 4 7 3)

    );
    }

    mid_layer_3
    {
        type    patch;
        faces
    (
        (2 6 5 1)

    );
    }

    mid_layer_4
    {
        type    patch;
        faces
    (
        (51 48 52 55)
    );
    }

    mid_layer_5
    {
        type    patch;
        faces
    (
        (50 54 53 49)

    );
    }

    mid_layer_6
    {
        type    patch;
        faces
    (
        (12 15 11 8)

    );
    }

    mid_layer_7
    {
        type    patch;
        faces
    (
        (9 10 14 13)

    );
    }

    mid_layer_8
    {
        type    patch;
        faces
    (
        (60 63 59 56)
    );
    }

    mid_layer_9
    {
        type    patch;
        faces
    (
        (16 19 23 20)

    );
    }

    mid_layer_10
    {
        type    patch;
        faces
    (
        (61 62 58 57)

    );
    }

    mid_layer_11
    {
        type    patch;
        faces
    (
        (17 18 22 21)

    );
    }

    mid_layer_12
    {
        type    patch;
        faces
    (
        (68 71 67 64)
    );
    }

    mid_layer_13
    {
        type    patch;
        faces
    (
        (65 66 70 69)

    );
    }

    mid_layer_14
    {
        type    patch;
        faces
    (
        (24 28 31 27)

    );
    }

    mid_layer_15
    {
        type    patch;
        faces
    (
        (25 26 30 29)

    );
    }

    mid_layer_16
    {
        type    patch;
        faces
    (
        (75 72 76 79)
    );
    }

    mid_layer_17
    {
        type    patch;
        faces
    (
        (73 74 78 77)

    );
    }

    mid_layer_18
    {
        type    patch;
        faces
    (
        (32 36 39 35)

    );
    }

    mid_layer_19
    {
        type    patch;
        faces
    (
        (33 34 38 37)

    );
    }

    mid_layer_20
    {
        type    patch;
        faces
    (
        (84 87 83 80)
    );
    }
*/
);

mergePatchPairs 
(
/*
    (mid_layer_1  mid_layer_2)

    (mid_layer_3  mid_layer_4)
    (mid_layer_5  mid_layer_6)

    (mid_layer_7  mid_layer_8)
    (mid_layer_9  mid_layer_10)

    (mid_layer_11  mid_layer_12)
    (mid_layer_13  mid_layer_14)

    (mid_layer_15  mid_layer_16)
    (mid_layer_17  mid_layer_18)

    (mid_layer_19  mid_layer_20)
*/
);

// ************************************************************************* //
